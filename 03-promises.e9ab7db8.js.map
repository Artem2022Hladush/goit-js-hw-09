{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,UAC/BE,WAAYH,SAASC,cAAc,gBACnCG,UAAWJ,SAASC,cAAc,eAClCI,YAAaL,SAASC,cAAc,kBAmCtC,SAASK,EAAQC,GAfjB,IAAuBC,EAAUC,GAAVD,EAiBTD,EAjBmBE,EAiBZX,EAAKK,WAAWO,MAf5B,IAAIC,SAAQ,SAACC,EAASC,GAE3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACPH,GACFF,EAAQ,CAACJ,WAAUC,UAEnBI,EAAO,CAACL,WAAUC,S,GACjBA,E,KAOAS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,M,OAAYb,EAAAwB,OAAOC,QAAQ,uBAAsCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IACzFc,OAAM,SAAAJ,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,M,OAAWb,EAAAwB,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IApC/FX,EAAKC,KAAK0B,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,EAAKO,YAAYK,MAAOkB,IAChC,IAANA,IAIF9B,EAAKK,WAAWO,MAAQmB,OAAOC,SAAShC,EAAKK,WAAWO,OAASmB,OAAOC,SAAShC,EAAKM,UAAUM,QAHhGJ,EAAQsB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button'),\n  inputDelay: document.querySelector('.input-delay'),\n  inputStep: document.querySelector('.input-step'),\n  inputAmount: document.querySelector('.input-amount'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  for (let i = 1; i < refs.inputAmount.value; i ++) {  \n    if (i === 1) { \n      promise(i);\n\n    } else {\n      refs.inputDelay.value = Number.parseInt(refs.inputDelay.value) + Number.parseInt(refs.inputStep.value);\n\n      promise(i);\n    }\n  };\n};\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay})\n    }\n      reject({position, delay})\n    }, delay);\n  });\n};\n\nfunction promise(index) {\n\ncreatePromise(index, refs.inputDelay.value)\n      .then(({ position, delay }) => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n      .catch(({ position, delay }) =>Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","button","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$promise","index","position","delay","value","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","i","Number","parseInt"],"version":3,"file":"03-promises.e9ab7db8.js.map"}